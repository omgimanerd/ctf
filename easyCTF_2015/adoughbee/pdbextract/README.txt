---------------------------
FILES AND PRE-REQUISITES
---------------------------
1) Pdbxtract.exe – .NET UI to view/search pdb libraries; requires .NET 2.0+ ; Required in same dir :
  -System.Data.SQLite.dll (included) - SQLite managed code interface
  -Interop.Dia2lib.dll (included) - DIA COM interface wrapper for managed code; generated by Visual Studio from msdia100.dll
  -msdia100.dll - this the DIA COM interface, a redistributable Microsoft DLL provided in the visual studio SDK.  Pdbxtract registers the com interface by executing rundll32.exe on this DLL.

2) Pdbfetch[_x86|_x64].exe –  .NET CL utility to create pdb sets with manifest file that can be imported into a pdbxtract library; requires:
  -.NET 2.0 or greater installed
  -Microsoft Debugging tools for x86/x64 installed on the target OS
  -filelist.txt – argument to pdbfetch

3) Windows.pdbx – Default library containing PDB type information for various system binaries from several Microsoft operating systems.

------------------------------
SUMMARY
------------------------------

PdbXtract allows the user to explore symbolic type information as extracted from Microsoft PDB files. This tool has applications primarily for reverse engineering of Windows-based applications and for exploring the internals of Windows kernel components.

PdbXtract is not a pure pdb parser – it only extracts type information using Microsoft’s Debug Interface Access COM.

PdbXtract has two main features:  exploring a single PDB (PDB Explorer) and searching a library of PDBs for one or more operating systems.  PDB Explorer opens the pdb, parses type information using DIA, and displays a list of all structs, unions and enums.
 
The library tab allows you to create and search a library of PDB type information.  The default library included with pdbxtract, Windows.pdbx, contains PDB type information for the following important Microsoft system binaries:  kernel (ntoskrnl.exe, ntkrpamp, ntkrnlpa, ntkrnlmp), ndis.sys, win32k.sys and hal (hal.dll, halaacpi.dll, halmacpi.dll).  To start browsing this type information, switch to the library tab and click the import button.

The library included with PdbXtract covers several of Microsoft’s major operating system releases, but you can easily add more symbols.  PdbXtract includes a utility, called PdbFetch that simply runs Microsoft’s symchk utility to grab the symbols for the file names you supply (usage:  pdbfetch <file>, where <file> is a text file that contains a list of full paths to system binaries you want to retrieve symbols for).  Pdbfetch creates a “pdb set” which consists of the directory structure with containing PDB’s as created by symchk plus a manifest.xml file which summarizes the OS platform information.  To use a pdb set in PdbXtract, go to the library tab and click “new” if you want to create a new library from the pdb set or “add” if you want to add them to an existing library.

------------------------------
LICENSE
------------------------------
Please see accompanying LICENSE.TXT file for license information.